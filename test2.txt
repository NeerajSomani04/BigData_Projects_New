Hive best practice tips -->
https://www.quora.com/What-are-the-ways-to-improve-hive-query-performance-other-than-Impala-Spark-and-Tez


1) use the Apache Tez execution engine instead of Map-reduce.
set hive.execution.engine=tez;

2) USE VECTORIZATION
set hive.vectorized.execution.enabled = true;

set hive.vectorized.execution.reduce.enabled = true;

3) COST BASED QUERY OPTIMIZATION

set hive.cbo.enable=true;

set hive.compute.query.using.stats=true;

set hive.stats.fetch.column.stats=true;

set hive.stats.fetch.partition.stats=true;

Use analyze commands like below:

analyze table tweets compute statistics for columns;

some other tips --> https://www.qubole.com/blog/5-tips-for-efficient-hive-queries/
Tip 1: Partitioning Hive Tables

for example:- partition based on "comment_created_date" and "reply_date"

Tip 2: Bucketing Hive Tables

for example: "based on comment_id"
example: CLUSTERED BY (comment_id) into 64 buckets

set hive.enforce.bucketing = true;

If the tables needs to be joined than the table can be bucketed on joining columns.

SET hive.optimize.bucketmapjoin=true;

Than The SELECT statement then can include a MAPJOIN statement

Tip 3: Bucket Sampling
Tip 4: Block Sampling
Tip 5: Parallel Execution  

SET hive.exce.parallel=true;.
